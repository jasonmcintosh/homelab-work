apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spinnaker-role
rules:
  - apiGroups: ['']
    resources: [ 'namespaces', 'configmaps', 'events', 'replicationcontrollers', 'serviceaccounts', 'pods/log', ]
    verbs: [ 'create', 'delete', 'deletecollection', 'get', 'list', 'patch', 'update', 'watch', ]
  - apiGroups: ['']
    resources: ['pods', 'services', 'secrets', 'nodes','nodes/proxy', 'endpoints']
    verbs:
      [
        'create',
        'delete',
        'deletecollection',
        'get',
        'list',
        'patch',
        'update',
        'watch',
      ]
  - apiGroups: ['autoscaling']
    resources: ['horizontalpodautoscalers']
    verbs: ['list', 'get']
  - apiGroups: ['apps']
    resources: ['controllerrevisions']
    verbs: ['list']
  - apiGroups: ['extensions', 'apps', 'coordination.k8s.io']
    resources: ['daemonsets', 'deployments', 'deployments/scale', 'ingresses', 'replicasets', 'statefulsets', 'leases']
    verbs: [ 'create', 'delete', 'deletecollection', 'get', 'list', 'patch', 'update', 'watch', ]
  # These permissions are necessary for halyard to operate. We use this role also to deploy Spinnaker itself.
  - apiGroups: ['']
    resources: ['services/proxy', 'pods/portforward']
    verbs: [ 'create', 'delete', 'deletecollection', 'get', 'list', 'patch', 'update', 'watch', ]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spinnaker-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spinnaker-role
subjects:
  - namespace: spinnaker
    kind: ServiceAccount
    name: default
