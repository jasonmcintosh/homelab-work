---
kind: Namespace
apiVersion: v1
metadata:
  name: gitness
  labels:
    name: gitness
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-gitness
  namespace: gitness
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app: postgresql
    owner: mcintoshj@gmail.com
  labels:
    app: postgresql
  name: postgresql
  namespace: gitness
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        app: postgresql
        owner: mcintoshj@gmail.com
      labels:
        app: postgresql
    spec:
      containers:
        - env:
          - name: POSTGRES_PASSWORD
            value: gitness
          - name: POSTGRES_USER
            value: gitness
          - name: POSTGRES_DB
            value: gitness
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          image: library/postgres:15
          imagePullPolicy: Always
          livenessProbe: &probe-config
            failureThreshold: 3
            tcpSocket:
              port: 5432
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: *probe-config
          startupProbe: *probe-config
          name: gitness
          ports: 
          - containerPort: 5432
            protocol: TCP
          volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: postgresql-gitness
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app: postgresql
    owner: mcintoshj@gmail.com
  name: postgresql
  namespace: gitness
spec:
  ports:
  - port: 5432
  selector:
    app: postgresql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gitness
  name: gitness
  namespace: gitness
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitness
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitness
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: gitness-pv
      containers:
      - name: gitness
        securityContext:
          privileged: true
          runAsUser: 0
        image: harness/gitness:latest
        env:
          - name: DOCKER_HOST
            value: tcp://localhost:2375
          - name: GITNESS_DATABASE_DATASOURCE
            value: "host=postgresql.gitness.svc.cluster.local port=5432 sslmode=disable dbname=gitness user=gitness password=gitness"
          - name: GITNESS_DATABASE_DRIVER
            value: postgres 
          - name: GITNESS_URL_BASE
            value: https://git.mcintosh.farm
        ports:
        - name: web
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: web
        readinessProbe:
          httpGet:
            path: /
            port: web
        volumeMounts:
        - name: data
          mountPath: /data
      - name: dind
        image: docker:24.0.3-dind
        command: ["dockerd", "--host", "tcp://127.0.0.1:2375"]
        lifecycle:
          postStart:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - "echo '127.0.0.1 host.docker.internal' >> /etc/hosts"
        securityContext:
          privileged: true
        volumeMounts:
          - name: data
            mountPath: /certs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitness-pv
  namespace: gitness
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: gitness
  namespace: gitness
spec:
  selector:
    app: gitness
  ports:
  - targetPort: 3000
    port: 3000
    protocol: TCP
    name: config-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
  name: gitness
  namespace: gitness
spec:
  tls:
    - hosts:
      - "*.mcintosh.farm"
      secretName: mcintosh-farm
  rules:
  - host: git.mcintosh.farm
    http:
      paths:
      - backend:
          service:
            name: gitness
            port:
              number: 3000
        path: /
        pathType: Prefix
