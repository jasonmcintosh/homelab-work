---
kind: Namespace
apiVersion: v1
metadata:
  name: splunk
  labels:
    name: splunk
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: splunk
  namespace: splunk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app: splunk
    owner: mcintoshj@gmail.com
  labels:
    app: splunk
  name: splunk
  namespace: splunk
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: splunk
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        app: splunk
        owner: mcintoshj@gmail.com
      labels:
        app: splunk
    spec:
      containers:
        - env:
          - name: SPLUNK_PASSWORD
            value: changeit
          - name: SPLUNK_START_ARGS
            value: --accept-license
          image: splunk/splunk:latest
          imagePullPolicy: Always
          livenessProbe: &probe-config
            failureThreshold: 3
            tcpSocket:
              port: 8000
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 120
          readinessProbe: *probe-config
          startupProbe: *probe-config
          name: splunk
          ports: 
          - containerPort: 8000
            protocol: TCP
          - containerPort: 8088
            protocol: TCP
          volumeMounts:
          - name: data
            mountPath: /opt/splunk/var
          - name: config
            mountPath: /tmp/defaults/
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: splunk
      - name: config
        configMap:
          name: splunk
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 120
---
apiVersion: v1
kind: Service
metadata:
  name: splunk
  namespace: splunk
spec:
  selector:
    app: splunk
  ports:
  - targetPort: 8000
    port: 8000
    protocol: TCP
    name: http
  - targetPort: 8088
    port: 8088
    protocol: TCP
    name: hec
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: splunk
  namespace: splunk
data:
  default.yml: |
    splunk:
      opt: /opt
      home: /opt/splunk
      exec: /opt/splunk/bin/splunk
      pid: /opt/splunk/var/run/splunk/splunkd.pid
      password:  changeit
      svc_port: 8089
      http_port: 8000
      hec:
        token: 1BD1BBDF-F7C2-4205-9113-427724465EDB
      smartstore: null

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  name: splunk
  namespace: splunk
spec:
  tls:
    - hosts:
      - "*.mcintosh.farm"
      secretName: mcintosh-farm
  rules:
  - host: splunk.mcintosh.farm
    http:
      paths:
      - backend:
          service:
            name: splunk
            port:
              number: 8000
        path: /
        pathType: Prefix

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    cert-manager.io/cluster-issuer: cloudflare-issuer
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: splunk-hec
  namespace: splunk
spec:
  tls:
    - hosts:
      - "*.mcintosh.farm"
      secretName: mcintosh-farm
  rules:
  - host: splunk.mcintosh.farm
    http:
      paths:
      - backend:
          service:
            name: splunk
            port:
              number: 8088
        path: /hec(/|$)(.*)
        pathType: ImplementationSpecific
